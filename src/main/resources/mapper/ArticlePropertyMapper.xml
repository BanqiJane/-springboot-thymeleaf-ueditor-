<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.acproject.blogs.dao.ArticlePropertyMapper">
  <resultMap id="BaseResultMap" type="xyz.acproject.blogs.entity.ArticleProperty">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="describe" jdbcType="VARCHAR" property="describe" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="createMan" jdbcType="VARCHAR" property="createman" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="top" jdbcType="VARCHAR" property="top" />
    <result column="contentId" jdbcType="INTEGER" property="contentid" />
    <result column="bcid" jdbcType="INTEGER" property="bcid" />
    <result column="scid" jdbcType="INTEGER" property="scid" />
    <association property="articleScale" javaType="xyz.acproject.blogs.entity.ArticleScale">
     <id column="asid" jdbcType="INTEGER" property="id" />
    <result column="commentNum" property="commentnum" />
    <result column="articlePv" property="articlepv" />
    <result column="articlePraise" property="articlepraise" />
    </association>
    <association property="articleContent" javaType="xyz.acproject.blogs.entity.ArticleContent">
    <id column="acid" property="id" />
    <result column="content" property="content" />
    </association>
    <association property="bigcategory" javaType="xyz.acproject.blogs.entity.Bigcategory">
    <id column="bcid" property="id" />
    <result column="bcvalue" property="value" />
    </association>
    <association property="smallcategory" javaType="xyz.acproject.blogs.entity.Smallcategory">
    <id column="scid" property="id" />
    <result column="scvalue" property="value" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, `describe`, imgurl, createMan, createTime, `top`, contentId, bcid, scid
  </sql>
  <select id="selectByExample" parameterType="xyz.acproject.blogs.entity.ArticlePropertyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article_property
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article_property
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.acproject.blogs.entity.ArticlePropertyExample">
    delete from article_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.acproject.blogs.entity.ArticleProperty">
    insert into article_property (id, title, `describe`, 
      imgurl, createMan, createTime, 
      `top`, contentId, bcid, 
      scid)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{describe,jdbcType=VARCHAR}, 
      #{imgurl,jdbcType=VARCHAR}, #{createman,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{top,jdbcType=VARCHAR}, #{contentid,jdbcType=INTEGER}, #{bcid,jdbcType=INTEGER}, 
      #{scid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="xyz.acproject.blogs.entity.ArticleProperty">
    insert into article_property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="describe != null">
        `describe`,
      </if>
      <if test="imgurl != null">
        imgurl,
      </if>
      <if test="createman != null">
        createMan,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="top != null">
        `top`,
      </if>
      <if test="contentid != null">
        contentId,
      </if>
      <if test="bcid != null">
        bcid,
      </if>
      <if test="scid != null">
        scid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="createman != null">
        #{createman,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="top != null">
        #{top,jdbcType=VARCHAR},
      </if>
      <if test="contentid != null">
        #{contentid,jdbcType=INTEGER},
      </if>
      <if test="bcid != null">
        #{bcid,jdbcType=INTEGER},
      </if>
      <if test="scid != null">
        #{scid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.acproject.blogs.entity.ArticlePropertyExample" resultType="java.lang.Long">
    select count(*) from article_property
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_property
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.describe != null">
        `describe` = #{record.describe,jdbcType=VARCHAR},
      </if>
      <if test="record.imgurl != null">
        imgurl = #{record.imgurl,jdbcType=VARCHAR},
      </if>
      <if test="record.createman != null">
        createMan = #{record.createman,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.top != null">
        `top` = #{record.top,jdbcType=VARCHAR},
      </if>
      <if test="record.contentid != null">
        contentId = #{record.contentid,jdbcType=INTEGER},
      </if>
      <if test="record.bcid != null">
        bcid = #{record.bcid,jdbcType=INTEGER},
      </if>
      <if test="record.scid != null">
        scid = #{record.scid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_property
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      `describe` = #{record.describe,jdbcType=VARCHAR},
      imgurl = #{record.imgurl,jdbcType=VARCHAR},
      createMan = #{record.createman,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      `top` = #{record.top,jdbcType=VARCHAR},
      contentId = #{record.contentid,jdbcType=INTEGER},
      bcid = #{record.bcid,jdbcType=INTEGER},
      scid = #{record.scid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.acproject.blogs.entity.ArticleProperty">
    update article_property
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="describe != null">
        `describe` = #{describe,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null">
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="createman != null">
        createMan = #{createman,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="top != null">
        `top` = #{top,jdbcType=VARCHAR},
      </if>
      <if test="contentid != null">
        contentId = #{contentid,jdbcType=INTEGER},
      </if>
      <if test="bcid != null">
        bcid = #{bcid,jdbcType=INTEGER},
      </if>
      <if test="scid != null">
        scid = #{scid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.acproject.blogs.entity.ArticleProperty">
    update article_property
    set title = #{title,jdbcType=VARCHAR},
      `describe` = #{describe,jdbcType=VARCHAR},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      createMan = #{createman,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      `top` = #{top,jdbcType=VARCHAR},
      contentId = #{contentid,jdbcType=INTEGER},
      bcid = #{bcid,jdbcType=INTEGER},
      scid = #{scid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="selectListByPage2" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id ORDER BY ap.createTime DESC limit #{startPos},#{pageSize}
  </select>
  <select id="selectListByTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
    from article_property
    where title LIKE CONCAT(CONCAT('%',#{title,jdbcType=VARCHAR}),'%') limit 0,10
  </select>
  <select id="selectListByTitles" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.title LIKE CONCAT(CONCAT('%',#{title,jdbcType=VARCHAR}),'%') ORDER BY ap.createTime DESC limit #{num},5
  </select>
  <select id="selectListByScidDescOnTime" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.scid=#{scid} ORDER BY ap.createTime DESC limit 0,5
  </select>
  <select id="selectListByBcidDescOnTime" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.bcid=#{bcid} ORDER BY ap.createTime DESC limit 0,5
  </select>
  <select id="selectListByTitlesCount" parameterType="java.lang.String" resultType="java.lang.Long">
   select count(*) from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.title LIKE CONCAT(CONCAT('%',#{title,jdbcType=VARCHAR}),'%')
  </select>
  <select id="selectListByPageNum" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id ORDER BY ap.createTime DESC limit #{num},5
  </select>
  <select id="selectListOrderBycommentNumDesc" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id ORDER BY aas.commentNum desc LIMIT 5
  </select>
  <select id="selectListOrderByarticlePvDesc" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id ORDER BY aas.articlePv desc LIMIT 5
  </select>
  <select id="selectListOrderByarticlePraiseDesc" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id ORDER BY aas.articlePraise desc LIMIT 5
  </select>
  <select id="count" resultType="java.lang.Long">
    select count(*) from article_property
  </select>
   <select id="selectByid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.id = #{id,jdbcType=INTEGER};
  </select>
  <select id="selectListBybcidOrscid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.bcid = #{bcid,jdbcType=INTEGER} <if test="scid != null"> and ap.scid = #{scid,jdbcType=INTEGER}</if> ORDER BY ap.createTime DESC limit #{num},5
  </select>
  <select id="selectListBybcidOrscidCount" parameterType="java.lang.Integer" resultType="java.lang.Long">
   select count(*) from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.bcid = #{bcid,jdbcType=INTEGER} <if test="scid != null"> and ap.scid = #{scid,jdbcType=INTEGER}</if>
  </select>
  <select id="selectListByscid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   select ap.*,aas.commentNum,aas.articlePv,aas.articlePraise,ac.content,bc.`value` as bcValue,sc.`value` as scValue from article_property ap,article_scale aas,article_content ac,bigcategory bc,smallcategory sc where ap.id=aas.apid and ap.id=ac.apid and ap.bcid = bc.id and ap.scid = sc.id and ap.scid = #{scid,jdbcType=INTEGER};
  </select>
  <select id="selectByMaxApid" resultType="java.lang.Integer">
    select max(id) from article_property
  </select>
  <select id="countBycreateMan" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from article_property where createMan = #{createman,jdbcType=VARCHAR}
  </select>
</mapper>