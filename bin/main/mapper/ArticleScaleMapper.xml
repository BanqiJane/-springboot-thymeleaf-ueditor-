<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.acproject.blogs.dao.ArticleScaleMapper">
  <resultMap id="BaseResultMap" type="xyz.acproject.blogs.entity.ArticleScale">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="commentNum" jdbcType="BIGINT" property="commentnum" />
    <result column="articlePv" jdbcType="BIGINT" property="articlepv" />
    <result column="articlePraise" jdbcType="BIGINT" property="articlepraise" />
    <result column="apid" jdbcType="INTEGER" property="apid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, commentNum, articlePv, articlePraise, apid
  </sql>
  <select id="selectByExample" parameterType="xyz.acproject.blogs.entity.ArticleScaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article_scale
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article_scale
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xyz.acproject.blogs.entity.ArticleScaleExample">
    delete from article_scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xyz.acproject.blogs.entity.ArticleScale">
    insert into article_scale (id, commentNum, articlePv, 
      articlePraise, apid)
    values (#{id,jdbcType=INTEGER}, #{commentnum,jdbcType=BIGINT}, #{articlepv,jdbcType=BIGINT}, 
      #{articlepraise,jdbcType=BIGINT}, #{apid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="xyz.acproject.blogs.entity.ArticleScale">
    insert into article_scale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commentnum != null">
        commentNum,
      </if>
      <if test="articlepv != null">
        articlePv,
      </if>
      <if test="articlepraise != null">
        articlePraise,
      </if>
      <if test="apid != null">
        apid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentnum != null">
        #{commentnum,jdbcType=BIGINT},
      </if>
      <if test="articlepv != null">
        #{articlepv,jdbcType=BIGINT},
      </if>
      <if test="articlepraise != null">
        #{articlepraise,jdbcType=BIGINT},
      </if>
      <if test="apid != null">
        #{apid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xyz.acproject.blogs.entity.ArticleScaleExample" resultType="java.lang.Long">
    select count(*) from article_scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_scale
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commentnum != null">
        commentNum = #{record.commentnum,jdbcType=BIGINT},
      </if>
      <if test="record.articlepv != null">
        articlePv = #{record.articlepv,jdbcType=BIGINT},
      </if>
      <if test="record.articlepraise != null">
        articlePraise = #{record.articlepraise,jdbcType=BIGINT},
      </if>
      <if test="record.apid != null">
        apid = #{record.apid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_scale
    set id = #{record.id,jdbcType=INTEGER},
      commentNum = #{record.commentnum,jdbcType=BIGINT},
      articlePv = #{record.articlepv,jdbcType=BIGINT},
      articlePraise = #{record.articlepraise,jdbcType=BIGINT},
      apid = #{record.apid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.acproject.blogs.entity.ArticleScale">
    update article_scale
    <set>
      <if test="commentnum != null">
        commentNum = #{commentnum,jdbcType=BIGINT},
      </if>
      <if test="articlepv != null">
        articlePv = #{articlepv,jdbcType=BIGINT},
      </if>
      <if test="articlepraise != null">
        articlePraise = #{articlepraise,jdbcType=BIGINT},
      </if>
      <if test="apid != null">
        apid = #{apid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.acproject.blogs.entity.ArticleScale">
    update article_scale
    set commentNum = #{commentnum,jdbcType=BIGINT},
      articlePv = #{articlepv,jdbcType=BIGINT},
      articlePraise = #{articlepraise,jdbcType=BIGINT},
      apid = #{apid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByApidOnPv" parameterType="java.lang.Integer">
    update article_scale set articlePv = articlePv + 1  where apid = #{apid,jdbcType=INTEGER}
  </update>
  <update id="updateByApidOnPraise" parameterType="java.lang.Integer">
    update article_scale set articlePraise = #{articlepraise,jdbcType=BIGINT}  where apid = #{apid,jdbcType=INTEGER}
  </update>
  <update id="updateByApidOnCommentNum" parameterType="java.lang.Integer">
    update article_scale set commentNum = #{commentnum,jdbcType=BIGINT}  where apid = #{apid,jdbcType=INTEGER}
  </update>
  <select id="CountByTotalArticlePv" resultType="java.lang.Long">
  select sum(articlePv) from article_scale;
  </select>
  <delete id="deleteByApid" parameterType="java.lang.Integer">
    delete from article_scale
    where apid = #{apid,jdbcType=INTEGER}
  </delete>
</mapper>