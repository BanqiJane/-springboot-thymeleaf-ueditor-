<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.acproject.blogs.dao.CommentPraiseMapper">
	<resultMap id="BaseResultMap"
		type="xyz.acproject.blogs.entity.CommentPraise">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
		<result column="commentId" jdbcType="INTEGER"
			property="commentid" />
		<result column="apid" jdbcType="INTEGER" property="apid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, `name`, `time`, commentId, apid
	</sql>
	<select id="selectByExample"
		parameterType="xyz.acproject.blogs.entity.CommentPraiseExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from comment_praise
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from comment_praise
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from comment_praise
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="xyz.acproject.blogs.entity.CommentPraiseExample">
		delete from comment_praise
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="xyz.acproject.blogs.entity.CommentPraise">
		insert into comment_praise (id, `name`, `time`,
		commentId, apid)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{time,jdbcType=TIMESTAMP},
		#{commentid,jdbcType=INTEGER}, #{apid,jdbcType=INTEGER})
	</insert>
	<insert id="insertIsExists"  
	    parameterType="xyz.acproject.blogs.entity.CommentPraise">
		insert into comment_praise (`name`, `time`,
		commentId, apid) select #{name,jdbcType=VARCHAR},
		#{time,jdbcType=TIMESTAMP},
		#{commentid,jdbcType=INTEGER},
		#{apid,jdbcType=INTEGER} from dual where NOT EXISTS (select * from comment_praise where name=#{name,jdbcType=VARCHAR} and commentId= #{commentid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="xyz.acproject.blogs.entity.CommentPraise">
		insert into comment_praise
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				`name`,
			</if>
			<if test="time != null">
				`time`,
			</if>
			<if test="commentid != null">
				commentId,
			</if>
			<if test="apid != null">
				apid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="commentid != null">
				#{commentid,jdbcType=INTEGER},
			</if>
			<if test="apid != null">
				#{apid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="xyz.acproject.blogs.entity.CommentPraiseExample"
		resultType="java.lang.Long">
		select count(*) from comment_praise
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update comment_praise
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				`name` = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.time != null">
				`time` = #{record.time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.commentid != null">
				commentId = #{record.commentid,jdbcType=INTEGER},
			</if>
			<if test="record.apid != null">
				apid = #{record.apid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update comment_praise
		set id = #{record.id,jdbcType=INTEGER},
		`name` = #{record.name,jdbcType=VARCHAR},
		`time` = #{record.time,jdbcType=TIMESTAMP},
		commentId = #{record.commentid,jdbcType=INTEGER},
		apid = #{record.apid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="xyz.acproject.blogs.entity.CommentPraise">
		update comment_praise
		<set>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="time != null">
				`time` = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="commentid != null">
				commentId = #{commentid,jdbcType=INTEGER},
			</if>
			<if test="apid != null">
				apid = #{apid,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="xyz.acproject.blogs.entity.CommentPraise">
		update comment_praise
		set `name` = #{name,jdbcType=VARCHAR},
		`time` = #{time,jdbcType=TIMESTAMP},
		commentId = #{commentid,jdbcType=INTEGER},
		apid = #{apid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByIpAndCommentId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from comment_praise
		where name = #{name,jdbcType=VARCHAR} and commentId =
		#{commentid,jdbcType=INTEGER} and apid = #{apid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByApid" parameterType="java.lang.Integer">
		delete from comment_praise
		where apid = #{apid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByCid" parameterType="java.lang.Integer">
		delete from comment_praise
		where commentId = #{cid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByCids" parameterType="java.lang.Integer">
		delete from comment_praise
		where commentId in
		<foreach collection="list" open="(" close=")" separator=","
			item="cid">
			#{cid}
		</foreach>
	</delete>
</mapper>